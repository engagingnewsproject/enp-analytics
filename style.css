/* =Reset
-------------------------------------------------------------- */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {
  border: 0;
  font-family: inherit;
  font-size: 100%;
  font-style: inherit;
  font-weight: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline; }

html {
  font-size: 100%;
  /* Corrects text resizing oddly in IE6/7 when body font-size is set using em units http://clagnut.com/blog/348/#c790 */
  overflow-y: scroll;
  /* Keeps page centred in all browsers regardless of content height */
  -webkit-text-size-adjust: 100%;
  /* Prevents iOS text size adjust after orientation change, without disabling user zoom */
  -ms-text-size-adjust: 100%;
  /* www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/ */ }

body {
  background: #fff;
  overflow: hidden; }

article, aside, details, figcaption, figure, footer, header, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

table {
  /* tables still need 'cellspacing="0"' in the markup */
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  font-weight: normal;
  text-align: left; }

blockquote:before, blockquote:after, q:before, q:after {
  content: ""; }

blockquote, q {
  quotes: "" ""; }

a:focus {
  outline: thin dotted; }

a:hover, a:active {
  /* Improves readability when focused and also mouse hovered in all browsers people.opera.com/patrickl/experiments/keyboard/test */
  outline: 0; }

a img {
  border: 0; }

/* Reseting to border-box so we can do 100% width with 20px and not mess stuff up. */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/* Text meant only for screen readers */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important; }

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar */ }

.primary {
  color: #356d99; }

.primary-bg {
  background: #356d99; }

.secondary {
  color: #0A3348; }

.secondary-bg {
  background: #0A3348; }

.row:after, .container:after, .clr:after, .group:after, [class*="content"]:after, [class*="site"]:after {
  content: "";
  display: table;
  clear: both; }

.row, .container {
  max-width: 640px;
  margin-left: auto;
  margin-right: auto; }

.row, .container {
  padding-left: 20px;
  padding-right: 20px; }

@media screen and (min-width: 34em) {
  .container--wide, .row--wide {
    max-width: 840px; } }

/*  SELF CLEARING FLOATS - CLEARFIX METHOD */
/* Clearing */
.flex-grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }

.flex-item {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  min-width: 16em;
  max-width: 19em;
  padding: .6em 1.6em 1.6em;
  margin: .5em;
  background: #fff;
  border-bottom: 2px solid #ccc; }

body {
  background: #eee;
  color: #333;
  font-family: Tahoma, arial, sans-serif;
  font-size: 1em;
  line-height: 1.6;
  font-weight: 400;
  padding: 2em 0; }

/* Headings */
h1, h2, h3, h4, h5, h6 {
  font-family: Tahoma, arial, sans-serif;
  color: #333;
  clear: both;
  margin: 0 0 .2rem;
  font-weight: 500;
  line-height: 1.2em; }

h1 {
  font-size: 1.9em; }

h2 {
  font-size: 1.6em; }

h3 {
  font-size: 1.3em; }

h4 {
  font-size: 1.1em; }

h5 {
  font-size: 1em; }

h6 {
  font-size: 1em; }

p + h1, ul + h1, p + h2, ul + h2, p + h3, ul + h3, p + h4, ul + h4, p + h5, ul + h5, p + h6, ul + h6 {
  margin-top: 1.8em; }

/* Text elements */
p {
  font-size: 1em;
  margin-bottom: 1.125em;
  font-weight: 300; }

ul, ol {
  margin: 0 0 1.6em 1.25em; }

ul {
  list-style: disc; }

ol {
  list-style: decimal; }

li > ul, li > ol {
  margin-bottom: 0;
  margin-left: 1.6em; }

b, strong {
  font-weight: bold; }

dfn, cite, em {
  font-family: georgia, times, serif;
  font-style: italic; }

pre {
  background: #eee;
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: .95em;
  line-height: 1.6;
  margin-bottom: 1.6em;
  padding: 1.6em;
  overflow: auto;
  max-width: 100%; }

code, kbd, tt, var {
  font: .95em Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace; }

figure {
  margin: 0; }

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */ }

label {
  display: block;
  font-family: Tahoma, arial, sans-serif;
  font-size: .75em; }

input, textarea {
  font-size: .85em;
  font-family: Tahoma, arial, sans-serif;
  padding: .375em;
  border: 1px solid #bbb;
  border-bottom: 1px solid #999;
  border-radius: 3px;
  min-width: 275px;
  margin-bottom: 1.2em; }

textarea {
  width: 100%; }

/* Links */
a {
  color: #396BA7;
  text-decoration: none;
  -webkit-transition: color .2s;
          transition: color .2s;
  -ms-touch-action: manipulation;
      touch-action: manipulation; }

a:hover, a:focus, a:active {
  color: #184273; }

a:visited {
  color: #800035; }

.hint {
  font-size: .85em;
  color: #595959; }

article h3 {
  margin-bottom: .2em; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
  max-width: 35em;
  margin-left: auto;
  margin-right: auto;
  font-size: .9em; }

th {
  color: #666;
  font-weight: 400;
  text-align: left; }

td, th {
  padding: .4em 2em .4em 1em; }

tr:nth-child(odd) td {
  background: #f8f8f8; }

.masthead {
  margin-bottom: 2em; }

.masthead, .main {
  margin-left: auto;
  margin-right: auto;
  max-width: 40em; }

.site-data {
  background: #fff;
  border-bottom: 2px solid #ccc;
  padding: 1.6em 1em 1.6em;
  margin-bottom: 2em; }

.site-url {
  color: #666;
  font-weight: 400; }

.integer {
  text-align: right; }

.site-url {
  margin: 1em 0 .2em;
  font-size: 1em; }

.chevron {
  line-height: 0;
  position: relative;
  top: .07em;
  font-size: 1.5em; }

.icon-up, .icon-down {
  width: 2em;
  height: 2em;
  fill: #777777; }

.icon-up:hover, .icon-down:hover {
  fill: #396BA7; }

.up, .down {
  position: absolute;
  right: 0; }

.up {
  top: -0.5em; }

.down {
  bottom: -1em; }

.order-wrap {
  position: relative;
  left: 2.6em; }

.integer .order-wrap {
  left: 0; }

/* Search form */
input {
  padding: 0.6rem;
  font-size: 1em;
  border-radius: 3px;
  border: 1px solid #ddd; }

button {
  padding: 0.6rem 1rem;
  font-size: .9em;
  border: none;
  border-radius: 3px;
  color: #fff;
  background: #20A581; }

button:hover {
  background: #20A581; }

.main--onload-animate {
  margin-top: 0;
  -webkit-animation: fadein 0.42s;
          animation: fadein 0.42s; }

@-webkit-keyframes fadein {
  from {
    margin-top: -2em;
    opacity: 0; }

  to {
    margin-top: 0;
    opacity: 1; } }

@keyframes fadein {
  from {
    margin-top: -2em;
    opacity: 0; }

  to {
    margin-top: 0;
    opacity: 1; } }

@media screen and (min-width: 30em) {
  body {
    padding: 2em; }
  .site-data {
    padding: 2.6em 2em 3.6em;
    margin-bottom: 3em; } }


/*# sourceMappingURL=data:application/json;base64, */