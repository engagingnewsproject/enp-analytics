/* =Reset
-------------------------------------------------------------- */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {
  border: 0;
  font-family: inherit;
  font-size: 100%;
  font-style: inherit;
  font-weight: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline; }

html {
  font-size: 100%;
  /* Corrects text resizing oddly in IE6/7 when body font-size is set using em units http://clagnut.com/blog/348/#c790 */
  overflow-y: scroll;
  /* Keeps page centred in all browsers regardless of content height */
  -webkit-text-size-adjust: 100%;
  /* Prevents iOS text size adjust after orientation change, without disabling user zoom */
  -ms-text-size-adjust: 100%;
  /* www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/ */ }

article, aside, details, figcaption, figure, footer, header, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

table {
  /* tables still need 'cellspacing="0"' in the markup */
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  font-weight: normal;
  text-align: left; }

blockquote:before, blockquote:after, q:before, q:after {
  content: ""; }

blockquote, q {
  quotes: "" ""; }

a:focus {
  outline: thin dotted; }

a:hover, a:active {
  /* Improves readability when focused and also mouse hovered in all browsers people.opera.com/patrickl/experiments/keyboard/test */
  outline: 0; }

a img {
  border: 0; }

/* Reseting to border-box so we can do 100% width with 20px and not mess stuff up. */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/* Text meant only for screen readers */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important; }

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar */ }

.primary {
  color: #356d99; }

.primary-bg {
  background: #356d99; }

.secondary {
  color: #0A3348; }

.secondary-bg {
  background: #0A3348; }

.row:after, .container:after, .clr:after, .group:after, [class*="content"]:after, [class*="site"]:after {
  content: "";
  display: table;
  clear: both; }

.row, .container {
  max-width: 640px;
  margin-left: auto;
  margin-right: auto; }

.row, .container {
  padding-left: 20px;
  padding-right: 20px; }

@media screen and (min-width: 34em) {
  .container--wide, .row--wide {
    max-width: 840px; } }

/*  SELF CLEARING FLOATS - CLEARFIX METHOD */
/* Clearing */
body {
  background: #eee;
  padding: 2em 1em; }

.flex-grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap; }

.flex-item {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  padding: .6em 1.6em 1.6em;
  margin: .5em;
  -webkit-flex-basis: 16em;
      -ms-flex-preferred-size: 16em;
          flex-basis: 16em;
  background: #fff;
  border-bottom: 2px solid #ccc; }
  @media screen and (min-width: 40em) {
    .flex-item {
      -webkit-flex-basis: 19em;
          -ms-flex-preferred-size: 19em;
              flex-basis: 19em;
      max-width: 19em; } }

body {
  color: #333;
  font-family: Tahoma, arial, sans-serif;
  font-size: 1em;
  line-height: 1.6;
  font-weight: 400; }

/* Headings */
h1, h2, h3, h4, h5, h6 {
  font-family: Tahoma, arial, sans-serif;
  color: #333;
  clear: both;
  margin: 0 0 .2rem;
  font-weight: 500;
  line-height: 1.2em; }

h1 {
  font-size: 1.9em; }

h2 {
  font-size: 1.6em; }

h3 {
  font-size: 1.3em; }

h4 {
  font-size: 1.1em; }

h5 {
  font-size: 1em; }

h6 {
  font-size: 1em; }

p + h1, ul + h1, p + h2, ul + h2, p + h3, ul + h3, p + h4, ul + h4, p + h5, ul + h5, p + h6, ul + h6 {
  margin-top: 1.8em; }

/* Text elements */
p {
  font-size: 1em;
  margin-bottom: 1.125em;
  font-weight: 300; }

ul, ol {
  margin: 0 0 1.6em 1.25em; }

ul {
  list-style: disc; }

ol {
  list-style: decimal; }

li > ul, li > ol {
  margin-bottom: 0;
  margin-left: 1.6em; }

b, strong {
  font-weight: bold; }

dfn, cite, em {
  font-family: georgia, times, serif;
  font-style: italic; }

pre {
  background: #eee;
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: .95em;
  line-height: 1.6;
  margin-bottom: 1.6em;
  padding: 1.6em;
  overflow: auto;
  max-width: 100%; }

code, kbd, tt, var {
  font: .95em Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace; }

figure {
  margin: 0; }

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */ }

label {
  display: block;
  font-family: Tahoma, arial, sans-serif;
  font-size: .75em; }

input, textarea {
  font-size: .85em;
  font-family: Tahoma, arial, sans-serif;
  padding: .375em;
  border: 1px solid #bbb;
  border-bottom: 1px solid #999;
  border-radius: 3px;
  min-width: 275px;
  margin-bottom: 0.6em;
  -webkit-appearance: none;
  -webkit-border-radius: 0; }

textarea {
  width: 100%; }

/* Links */
a {
  color: #396BA7;
  text-decoration: none;
  -webkit-transition: color .2s;
          transition: color .2s;
  -ms-touch-action: manipulation;
      touch-action: manipulation; }

a:hover, a:focus, a:active {
  color: #184273; }

a:visited {
  color: #800035; }

.hint {
  font-size: .85em;
  color: #595959; }

article h3 {
  margin-bottom: .2em; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
  max-width: 35em;
  margin-left: auto;
  margin-right: auto;
  font-size: .9em; }

th {
  color: #666;
  font-weight: 400;
  text-align: left; }

td, th {
  padding: .4em 2em .4em 1em; }

tr:nth-child(odd) td {
  background: #f8f8f8; }

@media screen and (max-width: 34em) {
  .site-data {
    overflow-y: scroll; } }

.masthead {
  margin-bottom: 2em; }

.masthead, .main {
  margin-left: auto;
  margin-right: auto;
  max-width: 40em; }

.site-data {
  background: #fff;
  border-bottom: 2px solid #ccc;
  padding: 1.6em 1em 1.6em;
  margin: 0 -1em 2em; }
  @media screen and (min-width: 34em) {
    .site-data {
      margin: 0 0 2em; } }

.site-url {
  color: #666;
  font-weight: 400; }

.site-url__link {
  word-wrap: break-word; }

.integer {
  text-align: right; }

.site-url {
  margin: 1em 0 .2em;
  font-size: 1em; }

.chevron {
  line-height: 0;
  position: relative;
  top: .07em;
  font-size: 1.5em; }

.icon-up, .icon-down {
  width: 2em;
  height: 2em;
  fill: #777777; }

.icon-up:hover, .icon-down:hover {
  fill: #396BA7; }

.up, .down {
  position: absolute;
  right: 0; }

.up {
  top: -0.5em; }

.down {
  bottom: -1em; }

.order-wrap {
  position: relative;
  left: 2.6em; }

.integer .order-wrap {
  left: 0; }

/* Search form */
input {
  padding: 0.6rem;
  font-size: 1em;
  border-radius: 3px;
  border: 1px solid #ddd; }

button {
  padding: 0.6rem 1rem;
  font-size: .9em;
  border: none;
  border-radius: 3px;
  color: #fff;
  background: #20A581; }

button:hover {
  background: #20A581; }

.main--onload-animate {
  margin-top: 0;
  -webkit-animation: fadein 0.42s;
          animation: fadein 0.42s; }

@-webkit-keyframes fadein {
  from {
    margin-top: -2em;
    opacity: 0; }

  to {
    margin-top: 0;
    opacity: 1; } }

@keyframes fadein {
  from {
    margin-top: -2em;
    opacity: 0; }

  to {
    margin-top: 0;
    opacity: 1; } }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsIl9zZXR1cC5zY3NzIiwiX2NvbG9ycy5zY3NzIiwiX2dyaWQuc2NzcyIsIl90eXBvZ3JhcGh5LnNjc3MiLCJfZW5wLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7a0VBQ2lFO0FDRXFKO0VBUTFNLFdBQUE7RUFDSyxzQkFBQTtFQUNiLGlCQUFXO0VBQ1gscUJBQVk7RUFDWixzQkFBYTtFQUNMLFdBQUE7RUFDQyxZQUFBO0VBQ1QsWUFBUztFQUNULDBCQUFnQixFQUFBOztBQUVwQjtFQUNJLGlCQUFXO0VEUGIsd0hBQXVIO0VDUXJILG9CQUFZO0VETmQsc0VBQXFFO0VDT25FLGdDQUEwQjtFREw1QiwwRkFBeUY7RUNNdkYsNEJBQXNCO0VESnhCLGlIQUFnSCxFQUFFOztBQ08zRjtFQVNaLGdCQUFBLEVBQUE7O0FBRWI7RUFDSSxrQkFBWSxFQUFBOztBQUVoQjtFRFpFLHdEQUF1RDtFQ2FyRCwyQkFBaUI7RUFDakIsbUJBQWdCLEVBQUE7O0FBRXBCO0VBQ0kscUJBQWE7RUFDYixrQkFBWSxFQUFBOztBQUUrQjtFQUUzQyxhQUFTLEVBQUE7O0FBRUQ7RUFDQSxlQUFBLEVBQUE7O0FBRVo7RUFDSSxzQkFBUyxFQUFBOztBQUVIO0VEWlIsbUlBQWtJO0VDY3ZILFlBQUEsRUFBQTs7QUFFYjtFQUNJLFdBQVEsRUFBQTs7QURYWixzRkFBcUY7QUNlckY7RUFDRSx3QkFBWSxFQUFBOztBQUdkO0VBQ0UscUJBQVksRUFBQTs7QURiZCx5Q0FBd0M7QUNpQnhDO0VBQ0ksZ0NBQU07RUFDTiwrQkFBVSxFQUFBOztBQUdnQztFQUd4QiwyQkFBQTtFQUNILG9CQUFBO0VBQ2YsNENBQVk7RUFDWix1QkFBTTtFQUNOLGdCQUFPO0VBQ0UsZ0JBQUE7RUFDRSxpQkFBQTtFQUNYLG1CQUFhO0VBQ2IsY0FBUTtFQUNSLFdBQU07RUFDTyxxQkFBQTtFQUNKLHlCQUFBO0VBQ1QsdUJBQWlCO0VBQ2pCLFVBQUs7RUFDTCxhQUFPO0VBQ0UsaUJBQUE7RURsQlgsdUJBQXNCLEVBQUU7O0FFNUUxQjtFQUxXLGdCQU1QLEVBQUE7O0FBR0o7RUFUVyxxQkFVUCxFQUFBOztBQUdKO0VBWmEsZ0JBYVQsRUFBQTs7QUFHSjtFQUNJLHFCQUFBLEVBQUE7O0FDdUJxQztFQUNyQyxhQUFTO0VBQ1QsZ0JBQVM7RUFDRixhQUFBLEVBQUE7O0FBSWE7RUFDdEIsa0JBQVc7RUFDWCxtQkFBYTtFQUNiLG9CQUFjLEVBQUE7O0FBR0o7RUFHTSxvQkFBQTtFQUNkLHFCQUFlLEVBQUE7O0FBMUNYO0VBK0NVO0lBR1osa0JBQVcsRUFBQSxFQUFBOztBSCtDakIsOENBQTZDO0FBQzdDLGVBQWM7QUc3QmQ7RUFDZ0Isa0JBQUE7RUFDWixrQkFBUyxFQUFBOztBQWFiO0VBQ2Esc0JBQUE7RUFBQSx1QkFBQTtFQUFBLHNCQUFBO0VBQUEsZUFBQTtFQUNULDZCQUFXO01BQVgseUJBQVc7VUFBWCxxQkFBVyxFQUFBOztBQUdmO0VBQ1UscUJBQUE7RUFBQSxpQkFBQTtNQUFBLGFBQUE7VUFBQSxTQUFBO0VBQ04sMkJBQVM7RUFDVCxjQUFRO0VBQ1IsMEJBQVk7TUFBWiwrQkFBWTtVQUFaLGtCQUFZO0VBQ0Esa0JBQUE7RUFDRywrQkFBQSxFQUFBO0VBL0ZYO0lBeUZSO01BU1EsMEJBQVk7VUFBWiwrQkFBWTtjQUFaLGtCQUFZO01BQ1osaUJBQVcsRUFBQSxFQUFBOztBQ2pIbkI7RUZKUSxhRUtKO0VBTFEsd0NBTVI7RUFDVyxnQkFBQTtFQUNFLGtCQUFBO0VBQ2Isa0JBQWEsRUFBQTs7QUp1SWpCLGVBQWM7QUluSU07RUFDaEIsd0NBQUE7RUZiSyxhRWNMO0VBQ0EsYUFBTztFQUNQLG1CQUFRO0VBQ0ssa0JBQUE7RUFDQSxvQkFBQSxFQUFBOztBQUdqQjtFQUNlLGtCQUFBLEVBQUE7O0FBR2Y7RUFDSSxrQkFBVyxFQUFBOztBQUdmO0VBQ0ksa0JBQVcsRUFBQTs7QUFHZjtFQUNJLGtCQUFXLEVBQUE7O0FBR2Y7RUFDZSxnQkFBQSxFQUFBOztBQUdmO0VBQ2UsZ0JBQUEsRUFBQTs7QUFHNkQ7RUFNNUQsbUJBQUEsRUFBQTs7QUowSGhCLG9CQUFtQjtBSXRIbkI7RUFDZSxnQkFBQTtFQUNJLHdCQUFBO0VBQ2Ysa0JBQWEsRUFBQTs7QUFFakI7RUFDSSwwQkFBUSxFQUFBOztBQUVaO0VBQ0ksa0JBQVksRUFBQTs7QUFFaEI7RUFDSSxxQkFBWSxFQUFBOztBQUVoQjtFQUVtQixrQkFBQTtFQUNGLG9CQUFBLEVBQUE7O0FBR2pCO0VBQ0ksbUJBQWEsRUFBQTs7QUFHakI7RUFDSSxvQ0FBYTtFQUNiLG9CQUFZLEVBQUE7O0FBR2hCO0VBQ0ksa0JBQVk7RUFDWixxREFBYTtFQUNGLGtCQUFBO0VBQ0Usa0JBQUE7RUFDYixzQkFBZTtFQUNmLGdCQUFTO0VBQ1QsZ0JBQVU7RUFDQyxpQkFBQSxFQUFBOztBQUVBO0VBQ0MsNEVBQUEsRUFBQTs7QUFHaEI7RUFDWSxXQUFBLEVBQUE7O0FBR1o7RUFDSSxjQUFRO0VKa0hWLDZDQUE0QztFSWpIL0IsaUJBQUE7RUptSGIsaUNBQWdDLEVBQUU7O0FJaEhwQztFQUNJLGdCQUFTO0VBQ1Qsd0NBQUE7RUFDVyxrQkFBQSxFQUFBOztBQUdmO0VBRUksa0JBQVc7RUFwSEgsd0NBcUhSO0VBQ1MsaUJBQUE7RUFDRCx3QkFBQTtFQUNSLCtCQUFlO0VBQ2Ysb0JBQWU7RUFDZixrQkFBVztFQUNJLHNCQUFBO0VBQ0ssMEJBQUE7RUFDcEIsMEJBQXNCLEVBQUE7O0FBRzFCO0VBQ1csYUFBQSxFQUFBOztBSmlIWCxZQUFXO0FJN0dYO0VBQ0ksZ0JBQUE7RUFDaUIsdUJBQUE7RUFDakIsK0JBQVk7VUFBWix1QkFBWTtFQUNaLGdDQUFjO01BQWQsNEJBQWMsRUFBQTs7QUFHUjtFRnZJRyxnQkUwSVQsRUFBQTs7QUFHSjtFQUNJLGdCQUFPLEVBQUE7O0FBR1g7RUFDSSxrQkFBVztFQUNYLGdCQUFPLEVBQUE7O0FBR0g7RUFDVyxxQkFBQSxFQUFBOztBQUluQjtFQUNxQiwyQkFBQTtFQUNELG1CQUFBO0VBQ1QsYUFBQTtFQUNJLGlCQUFBO0VBQ1gsbUJBQWE7RUFDYixvQkFBYztFQUNkLGlCQUFXLEVBQUE7O0FBR2Y7RUFDSSxhQUFPO0VBQ1Asa0JBQWE7RUFDRCxrQkFBQSxFQUFBOztBQUdaO0VBRUEsNEJBQVMsRUFBQTs7QUFHYjtFQUNJLHFCQUFZLEVBQUE7O0FBR2hCO0VBQ0E7SUFDUSxvQkFBWSxFQUFBLEVBQUE7O0FDM0xwQjtFQUNJLG9CQUFlLEVBQUE7O0FBRW5CO0VBRWlCLG1CQUFBO0VBQ0Msb0JBQUE7RUFDZCxpQkFBVyxFQUFBOztBQUdmO0VBQ2dCLGtCQUFBO0VBQ1osK0JBQWU7RUFDZiwwQkFBUztFQUNULG9CQUFRLEVBQUE7RUZJSjtJRVJSO01BT2dCLGlCQUFBLEVBQUEsRUFBQTs7QUFJaEI7RUFDVyxhQUFBO0VBQ00sa0JBQUEsRUFBQTs7QUFHakI7RUFDZSx1QkFBQSxFQUFBOztBQUdmO0VBQ0ksbUJBQVksRUFBQTs7QUFHaEI7RUFDSSxvQkFBUTtFQUNSLGdCQUFXLEVBQUE7O0FBR2Y7RUFDSSxnQkFBYTtFQUNiLG9CQUFVO0VBQ0wsWUFBQTtFQUNNLGtCQUFBLEVBQUE7O0FBR2Y7RUFFSSxZQUFPO0VBQ1AsYUFBUTtFQUNGLGVBQUEsRUFBQTs7QUFHRjtFQUVKLGVBQU0sRUFBQTs7QUFHVjtFQUVjLG9CQUFBO0VBQ0gsVUFBQSxFQUFBOztBQUlYO0VBQ1MsYUFBQSxFQUFBOztBQUdUO0VBQ0ksY0FBUSxFQUFBOztBQUdaO0VBQ0ksb0JBQVU7RUFDVixhQUFNLEVBQUE7O0FBR0Q7RUFDQyxTQUFBLEVBQUE7O0FMNlFWLGtCQUFpQjtBS3pRakI7RUFDYSxpQkFBQTtFQUNFLGdCQUFBO0VBQ1gsb0JBQWU7RUFDZix3QkFBUSxFQUFBOztBQUdaO0VBQ0ksc0JBQVM7RUFDVCxpQkFBVztFQUNYLGNBQVE7RUFDTyxvQkFBQTtFQUNSLGFBQUE7RUFDUCxxQkFBWSxFQUFBOztBQUdoQjtFQUNJLHFCQUFZLEVBQUE7O0FBR2hCO0VBQ0ksZUFBWTtFQUNaLGlDQUFXO1VBQVgseUJBQVcsRUFBQTs7QUx5UWY7RUtyUUE7SUFDb0Isa0JBQUE7SUFDWixZQUFTLEVBQUE7O0VBRWpCO0lBQ29CLGVBQUE7SUFDWixZQUFTLEVBQUEsRUFBQTs7QUwrUGpCO0VLclFBO0lBQ29CLGtCQUFBO0lBQ1osWUFBUyxFQUFBOztFQUVqQjtJQUNvQixlQUFBO0lBQ1osWUFBUyxFQUFBLEVBQUEiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogPVJlc2V0XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsIGEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSwgZGVsLCBkZm4sIGVtLCBmb250LCBpbnMsIGtiZCwgcSwgcywgc2FtcCwgc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhciwgZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSwgZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsIHRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkIHtcbiAgYm9yZGVyOiAwO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250LXN0eWxlOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICBvdXRsaW5lOiAwO1xuICBwYWRkaW5nOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogQ29ycmVjdHMgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRTYvNyB3aGVuIGJvZHkgZm9udC1zaXplIGlzIHNldCB1c2luZyBlbSB1bml0cyBodHRwOi8vY2xhZ251dC5jb20vYmxvZy8zNDgvI2M3OTAgKi9cbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAvKiBLZWVwcyBwYWdlIGNlbnRyZWQgaW4gYWxsIGJyb3dzZXJzIHJlZ2FyZGxlc3Mgb2YgY29udGVudCBoZWlnaHQgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiBQcmV2ZW50cyBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogd3d3LjQ1NmJlcmVhc3RyZWV0LmNvbS9hcmNoaXZlLzIwMTAxMi9jb250cm9sbGluZ190ZXh0X3NpemVfaW5fc2FmYXJpX2Zvcl9pb3Nfd2l0aG91dF9kaXNhYmxpbmdfdXNlcl96b29tLyAqLyB9XG5cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbnRhYmxlIHtcbiAgLyogdGFibGVzIHN0aWxsIG5lZWQgJ2NlbGxzcGFjaW5nPVwiMFwiJyBpbiB0aGUgbWFya3VwICovXG4gIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbmNhcHRpb24sIHRoLCB0ZCB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsIHE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjsgfVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBcIlwiIFwiXCI7IH1cblxuYTpmb2N1cyB7XG4gIG91dGxpbmU6IHRoaW4gZG90dGVkOyB9XG5cbmE6aG92ZXIsIGE6YWN0aXZlIHtcbiAgLyogSW1wcm92ZXMgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzIHBlb3BsZS5vcGVyYS5jb20vcGF0cmlja2wvZXhwZXJpbWVudHMva2V5Ym9hcmQvdGVzdCAqL1xuICBvdXRsaW5lOiAwOyB9XG5cbmEgaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qIFJlc2V0aW5nIHRvIGJvcmRlci1ib3ggc28gd2UgY2FuIGRvIDEwMCUgd2lkdGggd2l0aCAyMHB4IGFuZCBub3QgbWVzcyBzdHVmZiB1cC4gKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG4vKiBUZXh0IG1lYW50IG9ubHkgZm9yIHNjcmVlbiByZWFkZXJzICovXG4uc2NyZWVuLXJlYWRlci10ZXh0IHtcbiAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xuICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDsgfVxuXG4uc2NyZWVuLXJlYWRlci10ZXh0OmhvdmVyLCAuc2NyZWVuLXJlYWRlci10ZXh0OmFjdGl2ZSwgLnNjcmVlbi1yZWFkZXItdGV4dDpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm94LXNoYWRvdzogMCAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjYpO1xuICBjbGlwOiBhdXRvICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjMjE3NTliO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgaGVpZ2h0OiBhdXRvO1xuICBsZWZ0OiA1cHg7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG4gIHBhZGRpbmc6IDE1cHggMjNweCAxNHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRvcDogNXB4O1xuICB3aWR0aDogYXV0bztcbiAgei1pbmRleDogMTAwMDAwO1xuICAvKiBBYm92ZSBXUCB0b29sYmFyICovIH1cblxuLnByaW1hcnkge1xuICBjb2xvcjogIzM1NmQ5OTsgfVxuXG4ucHJpbWFyeS1iZyB7XG4gIGJhY2tncm91bmQ6ICMzNTZkOTk7IH1cblxuLnNlY29uZGFyeSB7XG4gIGNvbG9yOiAjMEEzMzQ4OyB9XG5cbi5zZWNvbmRhcnktYmcge1xuICBiYWNrZ3JvdW5kOiAjMEEzMzQ4OyB9XG5cbi5yb3c6YWZ0ZXIsIC5jb250YWluZXI6YWZ0ZXIsIC5jbHI6YWZ0ZXIsIC5ncm91cDphZnRlciwgW2NsYXNzKj1cImNvbnRlbnRcIl06YWZ0ZXIsIFtjbGFzcyo9XCJzaXRlXCJdOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoOyB9XG5cbi5yb3csIC5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDY0MHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG5cbi5yb3csIC5jb250YWluZXIge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzRlbSkge1xuICAuY29udGFpbmVyLS13aWRlLCAucm93LS13aWRlIHtcbiAgICBtYXgtd2lkdGg6IDg0MHB4OyB9IH1cblxuLyogIFNFTEYgQ0xFQVJJTkcgRkxPQVRTIC0gQ0xFQVJGSVggTUVUSE9EICovXG4vKiBDbGVhcmluZyAqL1xuYm9keSB7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG4gIHBhZGRpbmc6IDJlbSAxZW07IH1cblxuLmZsZXgtZ3JpZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7IH1cblxuLmZsZXgtaXRlbSB7XG4gIGZsZXg6IDE7XG4gIHBhZGRpbmc6IC42ZW0gMS42ZW0gMS42ZW07XG4gIG1hcmdpbjogLjVlbTtcbiAgZmxleC1iYXNpczogMTZlbTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNjY2M7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDBlbSkge1xuICAgIC5mbGV4LWl0ZW0ge1xuICAgICAgZmxleC1iYXNpczogMTllbTtcbiAgICAgIG1heC13aWR0aDogMTllbTsgfSB9XG5cbmJvZHkge1xuICBjb2xvcjogIzMzMztcbiAgZm9udC1mYW1pbHk6IFRhaG9tYSwgYXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBsaW5lLWhlaWdodDogMS42O1xuICBmb250LXdlaWdodDogNDAwOyB9XG5cbi8qIEhlYWRpbmdzICovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgZm9udC1mYW1pbHk6IFRhaG9tYSwgYXJpYWwsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjMzMzO1xuICBjbGVhcjogYm90aDtcbiAgbWFyZ2luOiAwIDAgLjJyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjJlbTsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMS45ZW07IH1cblxuaDIge1xuICBmb250LXNpemU6IDEuNmVtOyB9XG5cbmgzIHtcbiAgZm9udC1zaXplOiAxLjNlbTsgfVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMS4xZW07IH1cblxuaDUge1xuICBmb250LXNpemU6IDFlbTsgfVxuXG5oNiB7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbnAgKyBoMSwgdWwgKyBoMSwgcCArIGgyLCB1bCArIGgyLCBwICsgaDMsIHVsICsgaDMsIHAgKyBoNCwgdWwgKyBoNCwgcCArIGg1LCB1bCArIGg1LCBwICsgaDYsIHVsICsgaDYge1xuICBtYXJnaW4tdG9wOiAxLjhlbTsgfVxuXG4vKiBUZXh0IGVsZW1lbnRzICovXG5wIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIG1hcmdpbi1ib3R0b206IDEuMTI1ZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7IH1cblxudWwsIG9sIHtcbiAgbWFyZ2luOiAwIDAgMS42ZW0gMS4yNWVtOyB9XG5cbnVsIHtcbiAgbGlzdC1zdHlsZTogZGlzYzsgfVxuXG5vbCB7XG4gIGxpc3Qtc3R5bGU6IGRlY2ltYWw7IH1cblxubGkgPiB1bCwgbGkgPiBvbCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIG1hcmdpbi1sZWZ0OiAxLjZlbTsgfVxuXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG5kZm4sIGNpdGUsIGVtIHtcbiAgZm9udC1mYW1pbHk6IGdlb3JnaWEsIHRpbWVzLCBzZXJpZjtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbnByZSB7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG4gIGZvbnQtZmFtaWx5OiBcIkNvdXJpZXIgMTAgUGl0Y2hcIiwgQ291cmllciwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IC45NWVtO1xuICBsaW5lLWhlaWdodDogMS42O1xuICBtYXJnaW4tYm90dG9tOiAxLjZlbTtcbiAgcGFkZGluZzogMS42ZW07XG4gIG92ZXJmbG93OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuY29kZSwga2JkLCB0dCwgdmFyIHtcbiAgZm9udDogLjk1ZW0gTW9uYWNvLCBDb25zb2xhcywgXCJBbmRhbGUgTW9ub1wiLCBcIkRlamFWdSBTYW5zIE1vbm9cIiwgbW9ub3NwYWNlOyB9XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDsgfVxuXG5pbWcge1xuICBoZWlnaHQ6IGF1dG87XG4gIC8qIE1ha2Ugc3VyZSBpbWFnZXMgYXJlIHNjYWxlZCBjb3JyZWN0bHkuICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogQWRoZXJlIHRvIGNvbnRhaW5lciB3aWR0aC4gKi8gfVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LWZhbWlseTogVGFob21hLCBhcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAuNzVlbTsgfVxuXG5pbnB1dCwgdGV4dGFyZWEge1xuICBmb250LXNpemU6IC44NWVtO1xuICBmb250LWZhbWlseTogVGFob21hLCBhcmlhbCwgc2Fucy1zZXJpZjtcbiAgcGFkZGluZzogLjM3NWVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjYmJiO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzk5OTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBtaW4td2lkdGg6IDI3NXB4O1xuICBtYXJnaW4tYm90dG9tOiAwLjZlbTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDA7IH1cblxudGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTsgfVxuXG4vKiBMaW5rcyAqL1xuYSB7XG4gIGNvbG9yOiAjMzk2QkE3O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGNvbG9yIC4ycztcbiAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247IH1cblxuYTpob3ZlciwgYTpmb2N1cywgYTphY3RpdmUge1xuICBjb2xvcjogIzE4NDI3MzsgfVxuXG5hOnZpc2l0ZWQge1xuICBjb2xvcjogIzgwMDAzNTsgfVxuXG4uaGludCB7XG4gIGZvbnQtc2l6ZTogLjg1ZW07XG4gIGNvbG9yOiAjNTk1OTU5OyB9XG5cbmFydGljbGUgaDMge1xuICBtYXJnaW4tYm90dG9tOiAuMmVtOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDM1ZW07XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIGZvbnQtc2l6ZTogLjllbTsgfVxuXG50aCB7XG4gIGNvbG9yOiAjNjY2O1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbnRkLCB0aCB7XG4gIHBhZGRpbmc6IC40ZW0gMmVtIC40ZW0gMWVtOyB9XG5cbnRyOm50aC1jaGlsZChvZGQpIHRkIHtcbiAgYmFja2dyb3VuZDogI2Y4ZjhmODsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNGVtKSB7XG4gIC5zaXRlLWRhdGEge1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDsgfSB9XG5cbi5tYXN0aGVhZCB7XG4gIG1hcmdpbi1ib3R0b206IDJlbTsgfVxuXG4ubWFzdGhlYWQsIC5tYWluIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiA0MGVtOyB9XG5cbi5zaXRlLWRhdGEge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2NjYztcbiAgcGFkZGluZzogMS42ZW0gMWVtIDEuNmVtO1xuICBtYXJnaW46IDAgLTFlbSAyZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzRlbSkge1xuICAgIC5zaXRlLWRhdGEge1xuICAgICAgbWFyZ2luOiAwIDAgMmVtOyB9IH1cblxuLnNpdGUtdXJsIHtcbiAgY29sb3I6ICM2NjY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuLnNpdGUtdXJsX19saW5rIHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkOyB9XG5cbi5pbnRlZ2VyIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cblxuLnNpdGUtdXJsIHtcbiAgbWFyZ2luOiAxZW0gMCAuMmVtO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG4uY2hldnJvbiB7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLjA3ZW07XG4gIGZvbnQtc2l6ZTogMS41ZW07IH1cblxuLmljb24tdXAsIC5pY29uLWRvd24ge1xuICB3aWR0aDogMmVtO1xuICBoZWlnaHQ6IDJlbTtcbiAgZmlsbDogIzc3Nzc3NzsgfVxuXG4uaWNvbi11cDpob3ZlciwgLmljb24tZG93bjpob3ZlciB7XG4gIGZpbGw6ICMzOTZCQTc7IH1cblxuLnVwLCAuZG93biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7IH1cblxuLnVwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLmRvd24ge1xuICBib3R0b206IC0xZW07IH1cblxuLm9yZGVyLXdyYXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDIuNmVtOyB9XG5cbi5pbnRlZ2VyIC5vcmRlci13cmFwIHtcbiAgbGVmdDogMDsgfVxuXG4vKiBTZWFyY2ggZm9ybSAqL1xuaW5wdXQge1xuICBwYWRkaW5nOiAwLjZyZW07XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7IH1cblxuYnV0dG9uIHtcbiAgcGFkZGluZzogMC42cmVtIDFyZW07XG4gIGZvbnQtc2l6ZTogLjllbTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMjBBNTgxOyB9XG5cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMyMEE1ODE7IH1cblxuLm1haW4tLW9ubG9hZC1hbmltYXRlIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgYW5pbWF0aW9uOiBmYWRlaW4gMC40MnM7IH1cblxuQGtleWZyYW1lcyBmYWRlaW4ge1xuICBmcm9tIHtcbiAgICBtYXJnaW4tdG9wOiAtMmVtO1xuICAgIG9wYWNpdHk6IDA7IH1cblxuICB0byB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuIiwiLyogPVJlc2V0XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGZvbnQsIGlucywga2JkLCBxLCBzLCBzYW1wLFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkIHtcbiAgICBib3JkZXI6IDA7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiAxMDAlO1xuICAgIGZvbnQtc3R5bGU6IGluaGVyaXQ7XG4gICAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIG91dGxpbmU6IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5odG1sIHtcbiAgICBmb250LXNpemU6IDEwMCU7IC8qIENvcnJlY3RzIHRleHQgcmVzaXppbmcgb2RkbHkgaW4gSUU2Lzcgd2hlbiBib2R5IGZvbnQtc2l6ZSBpcyBzZXQgdXNpbmcgZW0gdW5pdHMgaHR0cDovL2NsYWdudXQuY29tL2Jsb2cvMzQ4LyNjNzkwICovXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsOyAvKiBLZWVwcyBwYWdlIGNlbnRyZWQgaW4gYWxsIGJyb3dzZXJzIHJlZ2FyZGxlc3Mgb2YgY29udGVudCBoZWlnaHQgKi9cbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIFByZXZlbnRzIGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tICovXG4gICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIHd3dy40NTZiZXJlYXN0cmVldC5jb20vYXJjaGl2ZS8yMDEwMTIvY29udHJvbGxpbmdfdGV4dF9zaXplX2luX3NhZmFyaV9mb3JfaW9zX3dpdGhvdXRfZGlzYWJsaW5nX3VzZXJfem9vbS8gKi9cbn1cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cbm9sLCB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbnRhYmxlIHsgLyogdGFibGVzIHN0aWxsIG5lZWQgJ2NlbGxzcGFjaW5nPVwiMFwiJyBpbiB0aGUgbWFya3VwICovXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbn1cbmNhcHRpb24sIHRoLCB0ZCB7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSwgcTphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbn1cbmJsb2NrcXVvdGUsIHEge1xuICAgIHF1b3RlczogXCJcIiBcIlwiO1xufVxuYTpmb2N1cyB7XG4gICAgb3V0bGluZTogdGhpbiBkb3R0ZWQ7XG59XG5hOmhvdmVyLFxuYTphY3RpdmUgeyAvKiBJbXByb3ZlcyByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMgcGVvcGxlLm9wZXJhLmNvbS9wYXRyaWNrbC9leHBlcmltZW50cy9rZXlib2FyZC90ZXN0ICovXG4gICAgb3V0bGluZTogMDtcbn1cbmEgaW1nIHtcbiAgICBib3JkZXI6IDA7XG59XG5cbi8qIFJlc2V0aW5nIHRvIGJvcmRlci1ib3ggc28gd2UgY2FuIGRvIDEwMCUgd2lkdGggd2l0aCAyMHB4IGFuZCBub3QgbWVzcyBzdHVmZiB1cC4gKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qIFRleHQgbWVhbnQgb25seSBmb3Igc2NyZWVuIHJlYWRlcnMgKi9cbi5zY3JlZW4tcmVhZGVyLXRleHQge1xuICAgIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbn1cblxuLnNjcmVlbi1yZWFkZXItdGV4dDpob3Zlcixcbi5zY3JlZW4tcmVhZGVyLXRleHQ6YWN0aXZlLFxuLnNjcmVlbi1yZWFkZXItdGV4dDpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgYm94LXNoYWRvdzogMCAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjYpO1xuICAgIGNsaXA6IGF1dG8gIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzIxNzU5YjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGxlZnQ6IDVweDtcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICAgIHBhZGRpbmc6IDE1cHggMjNweCAxNHB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0b3A6IDVweDtcbiAgICB3aWR0aDogYXV0bztcbiAgICB6LWluZGV4OiAxMDAwMDA7IC8qIEFib3ZlIFdQIHRvb2xiYXIgKi9cbn1cbiIsIiRmb250IDogIzMzMztcbiR0aXRsZSA6ICMzMzM7XG4kcHJpbWFyeSA6ICMzNTZkOTk7XG4kc2Vjb25kYXJ5IDogIzBBMzM0ODtcbiRsaW5rIDogIzM5NkJBNztcbiRsaW5rX2hvdmVyOiAjMTg0MjczO1xuXG4ucHJpbWFyeSB7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xufVxuXG4ucHJpbWFyeS1iZyB7XG4gICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG59XG5cbi5zZWNvbmRhcnkge1xuICAgIGNvbG9yOiAkc2Vjb25kYXJ5O1xufVxuXG4uc2Vjb25kYXJ5LWJnIHtcbiAgICBiYWNrZ3JvdW5kOiAkc2Vjb25kYXJ5O1xufVxuIiwiLy8gSUYgTkVFRCBJRSBPTkxZIFNUWUxFU0hFRVRcbi8vIFNlVCBUSElTIElOIElFLlNDU1NcbiRmaXgtbXFzOiBmYWxzZSAhZGVmYXVsdDtcbiRkZXNrdG9wOiA0OGVtO1xuJHRhYmxldDogMzRlbTtcbiRtb2JpbGU6IDI0ZW07XG5cbkBtaXhpbiBtZWRpYSgkd2lkdGgpIHtcbiAgICAvLyBJZiB3ZSdyZSBvdXRwdXR0aW5nIGZvciBhIGZpeGVkIG1lZGlhIHF1ZXJ5IHNldC4uLlxuICAgIEBpZiAkZml4LW1xcyB7XG4gICAgICAgIC8vIC4uLmFuZCBpZiB3ZSBzaG91bGQgYXBwbHkgdGhlc2UgcnVsZXMuLi5cbiAgICAgICAgQGlmICRmaXgtbXFzID49ICR3aWR0aCB7XG4gICAgICAgICAgICAvLyAuLi5vdXRwdXQgdGhlIGNvbnRlbnQgdGhlIHVzZXIgZ2F2ZSB1cy5cbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBvdXRwdXQgaXQgdXNpbmcgYSByZWd1bGFyIG1lZGlhIHF1ZXJ5XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICR3aWR0aCkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtaXhpbiBtb2JpbGUtb25seSB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAkdGFibGV0KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHRhYmxldC1vbmx5IHtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQpIGFuZCAobWF4LXdpZHRoOiAkZGVza3RvcCAtIC4wMWVtKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGV2ZXJ5dGhpbmctYnV0LWRlc2t0b3Age1xuICBAbWVkaWEgKG1heC13aWR0aDogJGRlc2t0b3AgLSAuMDFlbSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbiVjbGVhcmZpeCB7XG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cblxuJWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNjQwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbiVyb3csXG4ucm93LFxuLmNvbnRhaW5lciB7XG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgQGV4dGVuZCAlY2xlYXJmaXg7XG4gICAgQGV4dGVuZCAlY29udGFpbmVyO1xufVxuXG4uY29udGFpbmVyLS13aWRlLFxuLnJvdy0td2lkZSB7XG4gICAgQGluY2x1ZGUgbWVkaWEoJHRhYmxldCkge1xuICAgICAgbWF4LXdpZHRoOiA4NDBweDtcbiAgICB9XG5cbn1cblxuLyogIFNFTEYgQ0xFQVJJTkcgRkxPQVRTIC0gQ0xFQVJGSVggTUVUSE9EICovXG4uY29udGFpbmVyLFxuLmNscixcbi5ncm91cCB7XG4gIEBleHRlbmQgJWNsZWFyZml4O1xufVxuXG5cbi8qIENsZWFyaW5nICovXG5bY2xhc3MqPVwiY29udGVudFwiXSxcbltjbGFzcyo9XCJzaXRlXCJdIHtcbiAgICBAZXh0ZW5kICVjbGVhcmZpeDtcbn1cblxuYm9keSB7XG4gICAgYmFja2dyb3VuZDogI2VlZTtcbiAgICBwYWRkaW5nOiAyZW0gMWVtO1xuXG4gICAgQG1peGluIG1lZGlhKCR0YWJsZXQpIHtcbiAgICAgICAgcGFkZGluZzogMmVtO1xuXG4gICAgICAgIC5zaXRlLWRhdGEge1xuICAgICAgICAgICAgcGFkZGluZzogMi42ZW0gMmVtIDMuNmVtO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogM2VtO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cbi5mbGV4LWdyaWQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbn1cblxuLmZsZXgtaXRlbSB7XG4gICAgZmxleDogMTtcbiAgICBwYWRkaW5nOiAuNmVtIDEuNmVtIDEuNmVtO1xuICAgIG1hcmdpbjogLjVlbTtcbiAgICBmbGV4LWJhc2lzOiAxNmVtO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNjY2M7XG5cbiAgICBAaW5jbHVkZSBtZWRpYSg0MGVtKSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDE5ZW07XG4gICAgICAgIG1heC13aWR0aDogMTllbTtcbiAgICB9XG5cbn1cbiIsIiRmb250Qm9keSA6IFRhaG9tYSwgYXJpYWwsIHNhbnMtc2VyaWY7XG4kZm9udFRpdGxlIDogVGFob21hLCBhcmlhbCwgc2Fucy1zZXJpZjtcbiRzYW5zU2VyaWYgOiBUYWhvbWEsIGFyaWFsLCBzYW5zLXNlcmlmO1xuXG5ib2R5IHtcbiAgICBjb2xvcjogJGZvbnQ7XG4gICAgZm9udC1mYW1pbHk6ICRmb250Qm9keTtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBsaW5lLWhlaWdodDogMS42O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi8qIEhlYWRpbmdzICovXG5oMSxoMixoMyxoNCxoNSxoNiB7XG4gICAgZm9udC1mYW1pbHk6ICRmb250VGl0bGU7XG4gICAgY29sb3I6ICR0aXRsZTtcbiAgICBjbGVhcjogYm90aDtcbiAgICBtYXJnaW46IDAgMCAuMnJlbTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbn1cblxuaDEge1xuICAgIGZvbnQtc2l6ZTogMS45ZW07XG59XG5cbmgyIHtcbiAgICBmb250LXNpemU6IDEuNmVtO1xufVxuXG5oMyB7XG4gICAgZm9udC1zaXplOiAxLjNlbTtcbn1cblxuaDQge1xuICAgIGZvbnQtc2l6ZTogMS4xZW07XG59XG5cbmg1IHtcbiAgICBmb250LXNpemU6IDFlbTtcbn1cblxuaDYge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xufVxuXG5wK2gxLCB1bCtoMSxcbnAraDIsIHVsK2gyLFxucCtoMywgdWwraDMsXG5wK2g0LCB1bCtoNCxcbnAraDUsIHVsK2g1LFxucCtoNiwgdWwraDYge1xuICAgIG1hcmdpbi10b3A6IDEuOGVtO1xufVxuXG4vKiBUZXh0IGVsZW1lbnRzICovXG5wIHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjEyNWVtO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG51bCwgb2wge1xuICAgIG1hcmdpbjogMCAwIDEuNmVtIDEuMjVlbTtcbn1cbnVsIHtcbiAgICBsaXN0LXN0eWxlOiBkaXNjO1xufVxub2wge1xuICAgIGxpc3Qtc3R5bGU6IGRlY2ltYWw7XG59XG5saSA+IHVsLFxubGkgPiBvbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBtYXJnaW4tbGVmdDogMS42ZW07XG59XG5cbmIsIHN0cm9uZyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbmRmbiwgY2l0ZSwgZW0ge1xuICAgIGZvbnQtZmFtaWx5OiBnZW9yZ2lhLCB0aW1lcywgc2VyaWY7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5wcmUge1xuICAgIGJhY2tncm91bmQ6ICNlZWU7XG4gICAgZm9udC1mYW1pbHk6IFwiQ291cmllciAxMCBQaXRjaFwiLCBDb3VyaWVyLCBtb25vc3BhY2U7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgICBsaW5lLWhlaWdodDogMS42O1xuICAgIG1hcmdpbi1ib3R0b206IDEuNmVtO1xuICAgIHBhZGRpbmc6IDEuNmVtO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIG1heC13aWR0aDogMTAwJTtcbn1cbmNvZGUsIGtiZCwgdHQsIHZhciB7XG4gICAgZm9udDogLjk1ZW0gTW9uYWNvLCBDb25zb2xhcywgXCJBbmRhbGUgTW9ub1wiLCBcIkRlamFWdSBTYW5zIE1vbm9cIiwgbW9ub3NwYWNlO1xufVxuXG5maWd1cmUge1xuICAgIG1hcmdpbjogMDtcbn1cblxuaW1nIHtcbiAgICBoZWlnaHQ6IGF1dG87IC8qIE1ha2Ugc3VyZSBpbWFnZXMgYXJlIHNjYWxlZCBjb3JyZWN0bHkuICovXG4gICAgbWF4LXdpZHRoOiAxMDAlOyAvKiBBZGhlcmUgdG8gY29udGFpbmVyIHdpZHRoLiAqL1xufVxuXG5sYWJlbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6ICRzYW5zU2VyaWY7XG4gICAgZm9udC1zaXplOiAuNzVlbTtcbn1cblxuaW5wdXQsXG50ZXh0YXJlYSB7XG4gICAgZm9udC1zaXplOiAuODVlbTtcbiAgICBmb250LWZhbWlseTogJGZvbnRCb2R5O1xuICAgIHBhZGRpbmc6IC4zNzVlbTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYmJiO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjOTk5O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBtaW4td2lkdGg6IDI3NXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDAuNmVtO1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6MDtcbn1cblxudGV4dGFyZWEge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4vKiBMaW5rcyAqL1xuYSB7XG4gICAgY29sb3I6ICRsaW5rO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAuMnM7XG4gICAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247IC8vIHJlbW92ZSAzMDBtcyBkZWxheSBmb3IgaWVcbn1cblxuYTpob3ZlcixcbmE6Zm9jdXMsXG5hOmFjdGl2ZSB7XG4gICAgY29sb3I6ICRsaW5rX2hvdmVyO1xufVxuXG5hOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjODAwMDM1O1xufVxuXG4uaGludCB7XG4gICAgZm9udC1zaXplOiAuODVlbTtcbiAgICBjb2xvcjogbGlnaHRlbigkZm9udCwgMTUlKTtcbn1cblxuYXJ0aWNsZSBoMyB7XG4gICAgbWFyZ2luLWJvdHRvbTogLjJlbTtcbn1cblxuXG50YWJsZSB7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDM1ZW07XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIGZvbnQtc2l6ZTogLjllbTtcbn1cblxudGgge1xuICAgIGNvbG9yOiAjNjY2O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxudGQsXG50aCB7XG4gICAgcGFkZGluZzogLjRlbSAyZW0gLjRlbSAxZW07XG59XG5cbnRyOm50aC1jaGlsZChvZGQpIHRkIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjhmOGY4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiR0YWJsZXQpIHtcbiAgICAuc2l0ZS1kYXRhIHtcbiAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgIH1cbn1cbiIsIi5tYXN0aGVhZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuLm1hc3RoZWFkLFxuLm1haW4ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBtYXgtd2lkdGg6IDQwZW07XG59XG5cbi5zaXRlLWRhdGEge1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNjY2M7XG4gICAgcGFkZGluZzogMS42ZW0gMWVtIDEuNmVtO1xuICAgIG1hcmdpbjogMCAtMWVtIDJlbTtcblxuICAgIEBpbmNsdWRlIG1lZGlhKCR0YWJsZXQpIHtcbiAgICAgICAgbWFyZ2luOiAwIDAgMmVtO1xuICAgIH1cbn1cblxuLnNpdGUtdXJsIHtcbiAgICBjb2xvcjogIzY2NjtcbiAgICBmb250LXdlaWdodDogNDAwO1xufVxuXG4uc2l0ZS11cmxfX2xpbmsge1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuLmludGVnZXIge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uc2l0ZS11cmwge1xuICAgIG1hcmdpbjogMWVtIDAgLjJlbTtcbiAgICBmb250LXNpemU6IDFlbTtcbn1cblxuLmNoZXZyb24ge1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IC4wN2VtO1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG59XG5cbi5pY29uLXVwLFxuLmljb24tZG93biB7XG4gICAgd2lkdGg6IDJlbTtcbiAgICBoZWlnaHQ6IDJlbTtcbiAgICBmaWxsOiAjNzc3Nzc3O1xufVxuXG4uaWNvbi11cDpob3Zlcixcbi5pY29uLWRvd246aG92ZXIge1xuICAgIGZpbGw6ICMzOTZCQTc7XG59XG5cbi51cCxcbi5kb3duIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG5cbn1cblxuLnVwIHtcbiAgICB0b3A6IC0wLjVlbTtcbn1cblxuLmRvd24ge1xuICAgIGJvdHRvbTogLTFlbTtcbn1cblxuLm9yZGVyLXdyYXAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiAyLjZlbTtcbn1cblxuLmludGVnZXIgLm9yZGVyLXdyYXAge1xuICAgIGxlZnQ6IDA7XG59XG5cbi8qIFNlYXJjaCBmb3JtICovXG5pbnB1dCB7XG4gICAgcGFkZGluZzogMC42cmVtO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xufVxuXG5idXR0b24ge1xuICAgIHBhZGRpbmc6IDAuNnJlbSAxcmVtO1xuICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQ6ICMyMEE1ODE7XG59XG5cbmJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogIzIwQTU4MTtcbn1cblxuLm1haW4tLW9ubG9hZC1hbmltYXRlIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIGFuaW1hdGlvbjogZmFkZWluIDAuNDJzO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVpbiB7XG4gICAgZnJvbSB7XG4gICAgICAgIG1hcmdpbi10b3A6IC0yZW07XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgIH1cbiAgICB0byAgIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */